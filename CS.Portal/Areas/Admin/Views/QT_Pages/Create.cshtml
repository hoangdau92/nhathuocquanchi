@model CS.Portal.Core.EF.CSF_Pages
@using CS.Portal.Core.DAO
@using CS.Portal.Core.EF

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Thêm mới trang
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Thông tin trang
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Create", "QT_Pages", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-lg-7">
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @data_validation_required_message = "Không được bỏ trống" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextBoxFor(model => model.Key, new { @class = "form-control", @data_validation_required_message = "Không được bỏ trống" })
                                        @Html.ValidationMessageFor(model => model.Key, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextBoxFor(model => model.Order, new { @class = "form-control", @data_validation_required_message = "Không được bỏ trống" })
                                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-group row">
                                    <div class="col-lg-3">
                                        @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-lg-9">
                                        @Html.TextBoxFor(model => model.Icon, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-offset-3 col-lg-9">
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox" name="@Html.IdFor(model => model.IsActive)" value="true" checked>
                                                    <b>@Html.DisplayNameFor(model => model.IsActive)</b>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox" name="@Html.IdFor(model => model.IsBlank)" value="false">
                                                    <b>@Html.DisplayNameFor(model => model.IsBlank)</b>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox" name="@Html.IdFor(model => model.IsAdmin)" id="@Html.IdFor(model => model.IsAdmin)" value="false" onclick="changeIsAdmin();">
                                                    <b>@Html.DisplayNameFor(model => model.IsAdmin)</b>
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-lg-3 hidden">
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox" name="@Html.IdFor(model => model.IsHost)" value="false">
                                                    <b>@Html.DisplayNameFor(model => model.IsHost)</b>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-3">
                                    @Html.LabelFor(model => model.ModuleID, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-lg-9">
                                    <select id="@Html.IdFor(model => model.ModuleID)" name="@Html.IdFor(model => model.ModuleID)" class="form-control">
                                        <option value="">Chọn module</option>
                                        @if (TempData["module"] != null)
                                        {
                                            List<CSF_Modules> lData = (List<CSF_Modules>)TempData["module"];
                                            for (int i = 0; i < lData.Count; i++)
                                            {
                                                <option value="@lData[i].ID">@lData[i].Name</option>
                                            }
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-3">
                                    @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-lg-9">
                                    <select id="@Html.IdFor(model => model.ParentID)" name="@Html.IdFor(model => model.ParentID)" class="form-control">
                                        <option value="0">Chọn trang cha</option>
                                        @*@if (TempData["page"] != null)
                                            {
                                                List<SubSelectBox> lData = (List<SubSelectBox>)TempData["page"];
                                                for (int i = 0; i < lData.Count; i++)
                                                {
                                                    <option value="@lData[i].id">@lData[i].name</option>
                                                }
                                            }*@
                                    </select>
                                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-lg-12 text-center">
                                    <input type="submit" value="Lưu" class="btn btn-primary" />
                                    <a class="btn btn-default" href="@Url.Content("~/Admin/QT_Pages/Index")">Quay lại</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section jsFooter{
    <script src="@Url.Content("~/areas/admin/jscontroller/QT_Pages.js")"></script>
    <script type="text/javascript">
        changeIsAdmin();
        function changeIsAdmin() {
            var isadmin = "false";
            var chk = jQuery("#@Html.IdFor(model => model.IsAdmin)");
            if (chk.is(':checked')) {
                isadmin = "true";
            } else {
                isadmin = "false";
            }
            var pJson = { 'isadmin': isadmin };
            jQuery.ajax({
                url: SiteUrlAdmin + "/qt_pages/GetPageParent",
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(pJson),
                type: "POST",
                success: function (r) {
                    if (r.state == true) {
                        var data = r.listTree;
                        var content = '<option value="0">Chọn trang cha</option>';
                        for (var i = 0; i < data.length; i++) {
                            content += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                        }
                        jQuery('#@Html.IdFor(model => model.ParentID)').html(content);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    jQuery('#@Html.IdFor(model => model.ParentID)').html('<option value="0">Chọn trang cha</option>');
                }
            });
        }
        @*jQuery("#@Html.IdFor(model => model.ModuleID)").change(function () {
            var moduleid = jQuery("#@Html.IdFor(model => model.ModuleID)").val();
            var isadmin = jQuery("#@Html.IdFor(model => model.IsAdmin)").val();
            var pJson = { 'moduleid': moduleid, 'isadmin': isadmin };
            jQuery.ajax({
                url: SiteUrlAdmin + "/qt_pages/GetPageParent",
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(pJson),
                type: "POST",
                success: function (r) {
                    if (r.state == true) {
                        var data = r.listTree;
                        var content = '<option value="0">Chọn trang cha</option>';
                        for (var i = 0; i < data.length; i++) {
                            content += '<option value="' + data[i].id + '">' + data[i].name + '</option>';
                        }
                        jQuery('#@Html.IdFor(model => model.ParentID)').html(content);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    jQuery('#@Html.IdFor(model => model.ParentID)').html('<option value="0">Chọn trang cha</option>');
                }
            });

        })*@
    </script>
}